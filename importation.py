import ffp
import numpy as np
some = [
    # simetrico, best local
[0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
[0, 0, 1, 0, 1, 0, 1, 0, 0, 1],
[0, 1, 0, 0, 1, 1, 1, 0, 0, 1],
[0, 0, 0, 0, 1, 0, 1, 1, 1, 1],
[0, 1, 1, 1, 0, 1, 1, 1, 1, 1],
[0, 0, 1, 0, 1, 0, 1, 0, 1, 1],
[1, 1, 1, 1, 1, 1, 0, 1, 1, 0],
[0, 0, 0, 1, 1, 0, 1, 0, 1, 1],
[0, 0, 0, 1, 1, 1, 1, 1, 0, 0],
[0, 1, 1, 1, 1, 1, 0, 1, 0, 0]]

# [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
# [0, 0, 0, 1, 0, 1, 1, 1, 0, 1],
# [0, 0, 0, 1, 1, 1, 0, 1, 1, 1],
# [0, 1, 1, 0, 0, 1, 1, 0, 1, 0],
# [0, 0, 1, 0, 0, 1, 1, 0, 0, 1],
# [0, 1, 1, 1, 1, 0, 1, 1, 1, 1],
# [1, 1, 0, 1, 1, 1, 0, 1, 1, 1],
# [0, 1, 1, 0, 0, 1, 1, 0, 1, 1],
# [0, 0, 1, 1, 0, 1, 1, 1, 0, 0],
# [0, 1, 1, 0, 1, 1, 1, 1, 0, 0]]

# [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
# [0, 0, 1, 0, 0, 0, 1, 1, 0, 1],
# [1, 1, 0, 1, 0, 1, 1, 0, 0, 0],
# [0, 0, 1, 0, 1, 0, 1, 0, 0, 0],
# [0, 0, 0, 1, 0, 1, 0, 0, 1, 0],
# [0, 0, 1, 0, 1, 0, 1, 0, 1, 1],
# [0, 1, 1, 1, 0, 1, 0, 1, 1, 1],
# [0, 1, 0, 0, 0, 0, 1, 0, 0, 0],
# [0, 0, 0, 0, 1, 1, 1, 0, 0, 1],
# [0, 1, 0, 0, 0, 1, 1, 0, 1, 0]]


# best global
# [0, 0, 0, 1, 0, 1, 0, 0, 0, 0],
# [0, 0, 1, 1, 1, 1, 1, 0, 1, 1],
# [0, 1, 0, 0, 1, 0, 0, 1, 0, 1],
# [1, 1, 0, 0, 0, 1, 0, 0, 0, 1],
# [0, 1, 1, 0, 0, 0, 1, 1, 0, 0],
# [1, 1, 0, 1, 0, 0, 0, 0, 0, 1],
# [0, 1, 0, 0, 1, 0, 0, 0, 0, 1],
# [0, 0, 1, 0, 1, 0, 0, 0, 0, 1],
# [0, 1, 0, 0, 0, 0, 0, 0, 0, 1],
# [0, 1, 1, 1, 0, 1, 1, 1, 1, 0]]

# mismo comportamiento
# [0, 0, 1, 0, 0, 1, 1, 0, 0, 0],
# [0, 0, 1, 1, 0, 0, 1, 1, 1, 0],
# [1, 1, 0, 1, 1, 1, 0, 1, 0, 1],
# [0, 1, 1, 0, 1, 1, 0, 0, 1, 1],
# [0, 0, 1, 1, 0, 0, 0, 0, 0, 0],
# [1, 0, 1, 1, 0, 0, 0, 1, 1, 0],
# [1, 1, 0, 0, 0, 0, 0, 1, 1, 0],
# [0, 1, 1, 0, 0, 1, 1, 0, 0, 1],
# [0, 1, 0, 1, 0, 1, 1, 0, 0, 0],
# [0, 0, 1, 1, 0, 0, 0, 1, 0, 0]]

ffp.adjacency = np.array(some)
ffp.ffp(ffp.degreeGlobal,True)
print(len(ffp.burned_nodes))
ffp.resetValues()
ffp.n_burned= 0
ffp.next_fire_set = {0}
ffp.ffp(ffp.degreeLocal,True)

print(len(ffp.burned_nodes))